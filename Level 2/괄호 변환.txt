재귀 함수 만드는 것에서 너무 헤맸다.
재귀함수는 무조건 값이 0이거나 배열이나 문자열이 빈 문자열일 때 통과 같은 종료장치가 필요.



///////////////////////////////

function reverse(str) {
  return str.slice(1, str.length - 1).split("").map((c) => (c === "(" ? ")" : "(")).join("");
}

function solution(p) {
  if (p.length < 1) return "";

  let balance = 0;
  let pivot = 0;
  do { balance += p[pivot++] === "(" ? 1 : -1 } while (balance !== 0);

  const u = p.slice(0, pivot);
  const v = solution(p.slice(pivot, p.length));

  if (u[0] === "(" && u[u.length - 1] == ")") return u + v;
  else return "(" + v + ")" + reverse(u);
}

이런 풀이도 있음


function solution(p) {
    if (p === '') return ''

    let sum = 0
    let isRight = true
    let u = ''
    let v = ''
    p.split('').some((item, index) => {
        if (item === '(') sum++
        else sum--

        if (sum === 0) {
            u = p.slice(0, index+1)
            v = p.slice(index+1)        
        } else if (sum < 0) {
            isRight = false
        }
        return sum === 0
    })

    if (isRight) return u + solution(v)
    else  {
        let tmp = u.slice(1, u.length-1).split('').map(item => item === '(' ? ')' : '(').join('')
        return '(' + solution(v) + ')' + tmp
    }
}

이런 풀이도 있음