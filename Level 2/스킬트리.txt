나름 무난하게 한번에 맞췄다.
속도도 추천 많이 받은 짧은 코드보다 빠르다.


//////////////////////////////////////////////////////////////
그래도 짧은 코드는 어떻게 짰는지 확인해보자


function solution(skill, skill_trees) {
    var answer = 0;
    var regex = new RegExp(`[^${skill}]`, 'g');

    return skill_trees
        .map((x) => x.replace(regex, ''))
        .filter((x) => {
            return skill.indexOf(x) === 0 || x === "";
        })
        .length
}

//////////////////////////////////////////////////////////////
짧은데도 아주 빠르다.

function solution(skill, skill_trees) {
    const skills = skill.split('');
    return skill_trees.filter(tree => skill.indexOf(tree.split('').filter(s => skills.includes(s)).join('')) === 0).length;
}


/////////////////////////////////////////////////////////////

function solution(skill, skill_trees) {
    function isCorrect(n) {
        let test = skill.split('');
        for (var i = 0; i < n.length; i++) {
            if (!skill.includes(n[i])) continue;
            if (n[i] === test.shift()) continue;
            return false;
        }
        return true;
    }    

    return skill_trees.filter(isCorrect).length;
}
