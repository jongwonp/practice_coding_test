숫자에 문자를 더하면 문자가 되고    => toString() 대체

문자에 숫자를 곱하면 숫자가 된다.   => Number() 나 parseInt 대체



또,

function solution(x) {
    return x % (x+'').split('').reduce((a,c) => a*1 + c*1) == 0 ? true : false ; 
}

처럼 삼항연산자를 사용할 때 앞의 조건이 0인지 아닌지를 구분하는 조건이면

== 0 을 쓰지 않고 ? 뒤의 true false 위치를 바꾸어도 결과가 같다.


== 0 을 쓴다면 앞이 (0또는 다른 수) == 0  라는 조건이 되기에 맞으면 true 틀리면 false를 쓰는데,


== 0 을 쓰지 않는다면 JS에서는 1이 true, 0이 false를 의미하므로

== 0을 쓰지 않은 조건식의 결론이 0이 나오면 false를 의미하므로 맞으면 false.... 잘 모르겠다

헷갈리므로 그냥 == 0 을 쓰자.